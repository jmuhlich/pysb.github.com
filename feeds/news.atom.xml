<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PySB - news</title><link href="/" rel="alternate"></link><link href="/feeds/news.atom.xml" rel="self"></link><id>/</id><updated>2018-03-07T00:00:00-06:00</updated><entry><title>PySB v1.6.0 Released</title><link href="/news/pysb-v160-released" rel="alternate"></link><published>2018-03-07T00:00:00-06:00</published><updated>2018-03-07T00:00:00-06:00</updated><author><name></name></author><id>tag:None,2018-03-07:/news/pysb-v160-released</id><summary type="html">&lt;h1&gt;New Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;New reversible rule operator &lt;code&gt;|&lt;/code&gt;; the previous &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operator is now pending deprecation (#309)&lt;/li&gt;
&lt;li&gt;Saving and loading of &lt;code&gt;SimulationResult&lt;/code&gt; objects with metadata in HDF5 format (#292)&lt;/li&gt;
&lt;li&gt;PySB now supports Kappa 4, including custom rate laws with PySB &lt;code&gt;Expression&lt;/code&gt;s. Kappa 3 support has been dropped (#334)&lt;/li&gt;
&lt;li&gt;Rule pattern matching and …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;New Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;New reversible rule operator &lt;code&gt;|&lt;/code&gt;; the previous &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operator is now pending deprecation (#309)&lt;/li&gt;
&lt;li&gt;Saving and loading of &lt;code&gt;SimulationResult&lt;/code&gt; objects with metadata in HDF5 format (#292)&lt;/li&gt;
&lt;li&gt;PySB now supports Kappa 4, including custom rate laws with PySB &lt;code&gt;Expression&lt;/code&gt;s. Kappa 3 support has been dropped (#334)&lt;/li&gt;
&lt;li&gt;Rule pattern matching and new model test suite (#285)&lt;/li&gt;
&lt;li&gt;Model components can now be accessed as attributes (#213)&lt;/li&gt;
&lt;li&gt;Importing models from BioModels can now use either the EBI mirror (default) or the CalTech one (#325)&lt;/li&gt;
&lt;li&gt;Cython support for &lt;code&gt;ScipyOdeSimulator&lt;/code&gt;; this allows efficient simulation on Python 3, where &lt;code&gt;weave&lt;/code&gt; is no longer an option (#320)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;General Improvements&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Native Python 3 compatibility for the whole PySB codebase (#312)&lt;/li&gt;
&lt;li&gt;Internal species for tracking synthesis/degradation rules &lt;code&gt;__source&lt;/code&gt; and &lt;code&gt;__sink&lt;/code&gt; have been removed (#317)&lt;/li&gt;
&lt;li&gt;Specifying a pattern with a dangling bond now causes an error (#328)&lt;/li&gt;
&lt;li&gt;Simulator &lt;code&gt;run()&lt;/code&gt; arguments are no longer persistent (#314)&lt;/li&gt;
&lt;li&gt;State values in patterns are now verified (#322)&lt;/li&gt;
&lt;li&gt;Frequently Asked Questions added to documentation (#331)&lt;/li&gt;
&lt;li&gt;Loading &lt;code&gt;CupSodaSimulator&lt;/code&gt; no longer initializes the GPU on import; instead it wait until instantiation (#332).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pysb.tools.sensitivity_analysis&lt;/code&gt; code updated for compatibility with matplotlib 2.1 (#303)&lt;/li&gt;
&lt;li&gt;Improvements to &lt;code&gt;ScipyOdeSimulator&lt;/code&gt;'s &lt;code&gt;weave&lt;/code&gt; interface, including better control of console output (#299) and ensuring C code is cacheable when unicode variable names are used (#301).&lt;/li&gt;
&lt;li&gt;Graph objects in the Kappa interface (e.g. contact maps) are now returned as &lt;code&gt;networkx&lt;/code&gt; graphs, not &lt;code&gt;pygraphviz&lt;/code&gt;. &lt;code&gt;pygraphviz&lt;/code&gt; support for reading .dot files in the Kappa interface has been replaced with &lt;code&gt;pydot&lt;/code&gt; (#335).&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Fix component rename when not using Self Exporter (#321)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ComplexPattern.__call__&lt;/code&gt; now raises a &lt;code&gt;DuplicateMonomerError&lt;/code&gt; when duplicate monomers are present (#323)&lt;/li&gt;
&lt;li&gt;Fixes for &lt;code&gt;ComplexPattern.is_concrete()&lt;/code&gt; (#307)&lt;/li&gt;
&lt;li&gt;Reversible &lt;code&gt;Rule.is_synth()&lt;/code&gt; and &lt;code&gt;is_deg()&lt;/code&gt; now work for reversible patterns (#326)&lt;/li&gt;
&lt;li&gt;Fix error when running Tyson model with &lt;code&gt;CupSodaSimulator&lt;/code&gt; (#332)&lt;/li&gt;
&lt;/ul&gt;</content><category term="pysb-release"></category></entry><entry><title>PySB v1.5.0 Released</title><link href="/news/pysb-v150-released" rel="alternate"></link><published>2017-08-19T00:00:00-05:00</published><updated>2017-08-19T00:00:00-05:00</updated><author><name></name></author><id>tag:None,2017-08-19:/news/pysb-v150-released</id><summary type="html">&lt;h1&gt;New features&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;BngSimulator&lt;/code&gt;, an interface to all simulators provided by BioNetGen: ODE, partitioned-leaping, SSA (stochastic) and NFsim (network-free stochastic). See &lt;code&gt;pysb.simulator.bng.BngSimulator&lt;/code&gt; (#272).&lt;/p&gt;
&lt;h1&gt;General improvements&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Faster and more memory-efficient construction of ODEs from rules (#293).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ScipyOdeSimulator&lt;/code&gt; is faster in "pure Python" mode (i.e. without &lt;code&gt;weave&lt;/code&gt; and a …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;New features&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;BngSimulator&lt;/code&gt;, an interface to all simulators provided by BioNetGen: ODE, partitioned-leaping, SSA (stochastic) and NFsim (network-free stochastic). See &lt;code&gt;pysb.simulator.bng.BngSimulator&lt;/code&gt; (#272).&lt;/p&gt;
&lt;h1&gt;General improvements&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Faster and more memory-efficient construction of ODEs from rules (#293).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ScipyOdeSimulator&lt;/code&gt; is faster in "pure Python" mode (i.e. without &lt;code&gt;weave&lt;/code&gt; and a C compiler installed). It now also supports a somewhat broader range of sympy expressions in reaction rates. Also an experimental &lt;code&gt;use_theano&lt;/code&gt; option has been added which uses &lt;a href="http://deeplearning.net/software/theano/"&gt;theano&lt;/a&gt; rather than &lt;a href="https://github.com/scipy/weave"&gt;weave&lt;/a&gt; for evaluating differential equation expressions. Note that PySB users who previously depended on &lt;code&gt;scipy.weave&lt;/code&gt; for fast C translation of ODE expressions must now install the standalone &lt;code&gt;weave&lt;/code&gt; package, as this module has been removed from scipy (#294).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;StochKitSimulator&lt;/code&gt; adds support for models with expressions. Also the simulation setup process is now faster.&lt;/li&gt;
&lt;li&gt;Performance benchmarking and regression testing with Airspeed Velocity (#275). We will eventually work out a way to automatically execute the test suite and publish the results, but for now anyone who's interested in this would have to run it themselves.&lt;/li&gt;
&lt;li&gt;Continuous Integration for Windows with AppVeyor (#263).&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Accessing &lt;code&gt;SimulationResult.all&lt;/code&gt; no longer crashes when &lt;code&gt;unicode&lt;/code&gt; strings are used for observable or expression names under Python 2 (#291, issue #290). We thought we fixed the whole unicode-and-numpy issue here back in #245, but apparently we missed a spot.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MatlabExporter&lt;/code&gt; now correctly handles empty observables, i.e. observables whose pattern doesn't match any reachable species (#289).&lt;/li&gt;
&lt;li&gt;Some code errors in the tutorial (module/class names that didn't get updated during a code refactoring) have been corrected (#286). Thanks to Michael Retchin for catching this.&lt;/li&gt;
&lt;/ul&gt;</content><category term="pysb-release"></category></entry><entry><title>PySB v1.4.0 Released</title><link href="/news/pysb-v140-released" rel="alternate"></link><published>2017-06-09T00:00:00-05:00</published><updated>2017-06-09T00:00:00-05:00</updated><author><name></name></author><id>tag:None,2017-06-09:/news/pysb-v140-released</id><summary type="html">&lt;h1&gt;New features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;StochKitSimulator&lt;/code&gt;, an interface to the stochastic simulator &lt;a href="https://github.com/StochSS/StochKit"&gt;StochKit&lt;/a&gt;. See &lt;code&gt;pysb.simulator.stochkit.StochKitSimulator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;InitialsSensitivity&lt;/code&gt;, a tool to perform pairwise sensitivity analysis of initial conditions. See &lt;code&gt;pysb.tools.sensitivity_analysis.InitialSensitivity&lt;/code&gt;. &lt;strong&gt;EXPERIMENTAL&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Import models directly from BioModels from just their ID (BIOMDxxx... or MODELxxx...) with &lt;code&gt;pysb.importers.sbml.model_from_biomodels()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;General …&lt;/h1&gt;</summary><content type="html">&lt;h1&gt;New features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;StochKitSimulator&lt;/code&gt;, an interface to the stochastic simulator &lt;a href="https://github.com/StochSS/StochKit"&gt;StochKit&lt;/a&gt;. See &lt;code&gt;pysb.simulator.stochkit.StochKitSimulator&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;InitialsSensitivity&lt;/code&gt;, a tool to perform pairwise sensitivity analysis of initial conditions. See &lt;code&gt;pysb.tools.sensitivity_analysis.InitialSensitivity&lt;/code&gt;. &lt;strong&gt;EXPERIMENTAL&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Import models directly from BioModels from just their ID (BIOMDxxx... or MODELxxx...) with &lt;code&gt;pysb.importers.sbml.model_from_biomodels()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;General improvements&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Faster simulation runs for models with many expressions (~60x speedup for a 200-expression model).&lt;/li&gt;
&lt;li&gt;Improved accuracy and better error reporting when parsing SBML expressions in &lt;code&gt;pysb.importers.sbml&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The Kappa interface has been upgraded to support Kappa version 4. This also means Kappa v3 is no longer supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CupSodaSimulator&lt;/code&gt; now works on Python 3.&lt;/li&gt;
&lt;li&gt;Simulators now fully respect parameter value overrides for initial condition parameters (#252).&lt;/li&gt;
&lt;li&gt;Simulators now allow overriding a non-zero initial condition to zero (#251).&lt;/li&gt;
&lt;li&gt;Simulators no longer have problems with parameter names that are unicode objects (still only ASCII characters are allowed, though) (#278).&lt;/li&gt;
&lt;li&gt;Model components with the same name as a top-level sympy object (anything you would see in &lt;code&gt;from sympy import *&lt;/code&gt;) no longer cause errors when simulating (#259).&lt;/li&gt;
&lt;li&gt;Applying a compartment condition to a MonomerPattern that already has one now correctly raises an exception (#258).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PysbFlatExporter&lt;/code&gt; now works with compartments using inline size declarations (#210).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ComplexPattern.is_equivalent_to&lt;/code&gt; now correctly handles certain combinations of compartments that were previously mishandled (#257).&lt;/li&gt;
&lt;/ul&gt;</content><category term="pysb-release"></category></entry><entry><title>PySB v1.3.0 Released</title><link href="/news/pysb-v130-released" rel="alternate"></link><published>2017-03-24T00:00:00-05:00</published><updated>2017-03-24T00:00:00-05:00</updated><author><name></name></author><id>tag:None,2017-03-24:/news/pysb-v130-released</id><summary type="html">&lt;h1&gt;New features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CupSodaSimulator, a wrapper for the &lt;a href="https://github.com/aresio/cupSODA"&gt;cupSODA&lt;/a&gt; GPU-based ODE integrator. No special Python libraries are necessary since cupSODA comes as a standalone binary, but if PyCUDA is installed then PySB can auto-detect the configuration details of your GPU. See the documentation in &lt;code&gt;pysb.simulator.CupSodaSimulator&lt;/code&gt; for more.&lt;/li&gt;
&lt;li&gt;Simulators can …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;New features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CupSodaSimulator, a wrapper for the &lt;a href="https://github.com/aresio/cupSODA"&gt;cupSODA&lt;/a&gt; GPU-based ODE integrator. No special Python libraries are necessary since cupSODA comes as a standalone binary, but if PyCUDA is installed then PySB can auto-detect the configuration details of your GPU. See the documentation in &lt;code&gt;pysb.simulator.CupSodaSimulator&lt;/code&gt; for more.&lt;/li&gt;
&lt;li&gt;Simulators can now support multiple parameter sets and/or initial condition sets, especially helpful for internally parallel simulators such as CupSodaSimulator.&lt;/li&gt;
&lt;li&gt;PySB internals now use the &lt;code&gt;logging&lt;/code&gt; module to emit diagnostics, making debugging (or silencing output) easier. This is exposed externally through the &lt;code&gt;PYSB_LOG&lt;/code&gt; environment variable -- set it to one of the standard logging levels (DEBUG, INFO, etc.) to control which messages are printed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;BNGL and SBML importers now work on Windows.&lt;/li&gt;
&lt;li&gt;Observables and Expressions with unicode objects for names (rather than strings) no longer trigger an internal numpy exception in the PySB Simulator code on Python 2. An exception will still be raised if the unicode names do contain non-ascii-safe characters, but the error message is now more intelligible.&lt;/li&gt;
&lt;/ul&gt;</content><category term="pysb-release"></category></entry><entry><title>PySB v1.2.2 Released</title><link href="/news/pysb-v122-released" rel="alternate"></link><published>2017-01-11T00:00:00-06:00</published><updated>2017-01-11T00:00:00-06:00</updated><author><name></name></author><id>tag:None,2017-01-11:/news/pysb-v122-released</id><summary type="html">&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The SBML exporter works again (it's been broken ever since v1.0.0 😬)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Other&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Documentation improvements&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The SBML exporter works again (it's been broken ever since v1.0.0 😬)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Other&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Documentation improvements&lt;/li&gt;
&lt;/ul&gt;</content><category term="pysb-release"></category></entry><entry><title>PySB v1.2.1 Released</title><link href="/news/pysb-v121-released" rel="alternate"></link><published>2016-10-13T00:00:00-05:00</published><updated>2016-10-13T00:00:00-05:00</updated><author><name></name></author><id>tag:None,2016-10-13:/news/pysb-v121-released</id><summary type="html">&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Python 3 / unicode compatibility fixes&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Python 3 / unicode compatibility fixes&lt;/li&gt;
&lt;/ul&gt;</content><category term="pysb-release"></category></entry><entry><title>PySB v1.2.0 Released</title><link href="/news/pysb-v120-released" rel="alternate"></link><published>2016-10-07T00:00:00-05:00</published><updated>2016-10-07T00:00:00-05:00</updated><author><name></name></author><id>tag:None,2016-10-07:/news/pysb-v120-released</id><summary type="html">&lt;h1&gt;New features&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Brand new Simulator classes and SimulationResult classes in the 
&lt;code&gt;pysb.simulator&lt;/code&gt; package. The old &lt;code&gt;pysb.integrate&lt;/code&gt; API is unchanged but has been
 reimplemented using the Simulator class.
&lt;/em&gt; Model import from other types of models in the &lt;code&gt;pysb.importers&lt;/code&gt; package. 
Currently supports BNGL and SBML model import.&lt;/p&gt;
&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;pysb_flat …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;New features&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Brand new Simulator classes and SimulationResult classes in the 
&lt;code&gt;pysb.simulator&lt;/code&gt; package. The old &lt;code&gt;pysb.integrate&lt;/code&gt; API is unchanged but has been
 reimplemented using the Simulator class.
&lt;/em&gt; Model import from other types of models in the &lt;code&gt;pysb.importers&lt;/code&gt; package. 
Currently supports BNGL and SBML model import.&lt;/p&gt;
&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;pysb_flat exporter now supports &lt;code&gt;MatchOnce&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Some Python 2 Unicode issues were addressed by eliminating uses of 
&lt;code&gt;type(...) == str&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><category term="pysb-release"></category></entry><entry><title>PySB v1.1.1 Released</title><link href="/news/pysb-v111-released" rel="alternate"></link><published>2016-05-02T00:00:00-05:00</published><updated>2016-05-02T00:00:00-05:00</updated><author><name></name></author><id>tag:None,2016-05-02:/news/pysb-v111-released</id><summary type="html">&lt;p&gt;Release to fix one minor bug with the PyPI upload.&lt;/p&gt;
&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The source distribution on PyPI now includes ez_setup.py.&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Release to fix one minor bug with the PyPI upload.&lt;/p&gt;
&lt;h1&gt;Bugfixes&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The source distribution on PyPI now includes ez_setup.py.&lt;/li&gt;
&lt;/ul&gt;</content><category term="pysb-release"></category></entry><entry><title>PySB v1.1.0 Released</title><link href="/news/pysb-v110-released" rel="alternate"></link><published>2016-04-21T00:00:00-05:00</published><updated>2016-04-21T00:00:00-05:00</updated><author><name></name></author><id>tag:None,2016-04-21:/news/pysb-v110-released</id><summary type="html">&lt;p&gt;PySB has officially adopted semantic versioning. This means v1.1.0 includes new features as compared to v1.0.x, but is still backwards compatible so you won't have to change any of your models to upgrade to it.&lt;/p&gt;
&lt;h1&gt;New features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Full Python 3 compatibility. All tests pass under Python …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;PySB has officially adopted semantic versioning. This means v1.1.0 includes new features as compared to v1.0.x, but is still backwards compatible so you won't have to change any of your models to upgrade to it.&lt;/p&gt;
&lt;h1&gt;New features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Full Python 3 compatibility. All tests pass under Python 3.4 and 3.5.&lt;/li&gt;
&lt;li&gt;BioNetGen 2.2.6 support, and a new API for interfacing with BioNetGen which can execute any BioNetGen commands and operate in batch or interactive mode. The old run_ssa function is still available.&lt;/li&gt;
&lt;li&gt;BioNetGen temporary files are now created in system temporary directories by default.&lt;/li&gt;
&lt;li&gt;Kappa 4.0 support, and a new API here as well. The old run_simulation, contact_map, and influence_map functions are still available. The Kappa install location is now configurable via the KAPPAPATH environment variable. Note that Kappa 4.0 hasn't yet been released, so until it is you will need to use the development version from the Kappa GitHub repository at https://github.com/Kappa-Dev/KaSim.&lt;/li&gt;
&lt;li&gt;Support for models without initial conditions, provided there’s at least one zero-order synthesis rule present, e.g. &lt;code&gt;Rule(‘Rule1’, None &amp;gt;&amp;gt; A(), Parameter(‘ksynth’, 1))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Automatic analytical Jacobian generation in the ODE solver. PySB can now optionally calculate a closed-form expression for the Jacobian of a model's ODEs which can help speed up the solver in some cases.&lt;/li&gt;
&lt;li&gt;pysb_flat exporter which serializes a model to Python/PySB code which can be saved to a file and imported again later. We found this useful for writing out dynamically generated models as "native" PySB model code. The code is just a straight list of all the component definitions so macro calls etc. are lost.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Other stuff&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Package installation now uses setuptools instead of distutils.&lt;/li&gt;
&lt;li&gt;We are now publishing coverage testing results at https://coveralls.io/github/pysb/pysb .&lt;/li&gt;
&lt;li&gt;Documentation of the PySB requirements and installation procedure has been improved significantly.&lt;/li&gt;
&lt;li&gt;Numerous bugfixes. We will try to be more explicit about enumerating these in future releases.&lt;/li&gt;
&lt;/ul&gt;</content><category term="pysb-release"></category></entry><entry><title>PySB v1.0.1 Released</title><link href="/news/pysb-v101-released" rel="alternate"></link><published>2015-11-06T00:00:00-06:00</published><updated>2015-11-06T00:00:00-06:00</updated><author><name></name></author><id>tag:None,2015-11-06:/news/pysb-v101-released</id><summary type="html">&lt;p&gt;PySB v1.0.1 has been released&lt;/p&gt;</summary><content type="html">&lt;p&gt;PySB v1.0.1 has been released&lt;/p&gt;</content><category term="pysb-release"></category></entry><entry><title>PySB v1.0.0 Released</title><link href="/news/pysb-v100-released" rel="alternate"></link><published>2014-12-23T00:00:00-06:00</published><updated>2014-12-23T00:00:00-06:00</updated><author><name></name></author><id>tag:None,2014-12-23:/news/pysb-v100-released</id><summary type="html">&lt;p&gt;PySB v1.0.0 has been released&lt;/p&gt;</summary><content type="html">&lt;p&gt;PySB v1.0.0 has been released&lt;/p&gt;</content><category term="pysb-release"></category></entry></feed>